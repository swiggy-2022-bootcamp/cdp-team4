basePath: /
definitions:
  domain.User:
    properties:
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      password:
        type: string
      phone:
        type: string
      role:
        type: integer
      user_id:
        type: string
      username:
        type: string
    type: object
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: User Service.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: User API
  version: "1.0"
paths:
  /:
    get:
      description: use tocheck whether user service is up and running or not
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            type: number
      summary: Health of user service
      tags:
      - Health
  /user:
    post:
      consumes:
      - application/json
      description: To register a new user for the app.
      parameters:
      - description: User structure
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/domain.User'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: number
      summary: Create User
      tags:
      - User
  /user/{id}:
    delete:
      consumes:
      - application/json
      description: To remove a particular user.
      parameters:
      - description: User Name
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "202":
          description: Accepted
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: number
      summary: Delete User
      tags:
      - User
    get:
      consumes:
      - application/json
      description: To get user details.
      parameters:
      - description: User Name
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/domain.User'
        "400":
          description: Bad Request
          schema:
            type: number
      security:
      - Bearer Token: []
      summary: Get User
      tags:
      - User
    patch:
      consumes:
      - application/json
      description: To update user
      parameters:
      - description: User Name
        in: path
        name: id
        required: true
        type: string
      - description: User structure
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/domain.User'
      produces:
      - application/json
      responses:
        "202":
          description: Accepted
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: number
      summary: Update User
      tags:
      - User
  /users:
    get:
      consumes:
      - application/json
      description: To get every user detail.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.User'
            type: array
        "400":
          description: Bad Request
          schema:
            type: number
      summary: Get all User details
      tags:
      - User
swagger: "2.0"
